<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ccs.opendfl.mysql.mapper.DflBlackWhiteItemMapper">
    <resultMap id="dflBlackWhiteItemMap" type="org.ccs.opendfl.mysql.dflcore.po.DflBlackWhiteItemPo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="blackwhite_id" property="blackwhiteId" jdbcType="INTEGER"/>
        <result column="data" property="data" jdbcType="VARCHAR"/>
        <result column="if_del" property="ifDel" jdbcType="NUMERIC"/>
        <result column="status" property="status" jdbcType="NUMERIC"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP"/>
        <result column="create_user" property="createUser" jdbcType="INTEGER"/>
        <result column="modify_user" property="modifyUser" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="field">
        id
        ,
		blackwhite_id, 
		data, 
		if_del, 
		status, 
		remark, 
		create_time, 
		modify_time, 
		create_user, 
		modify_user
    </sql>

    <sql id="findByPage_where">
        <where>
            <trim suffixOverrides="and | or">
                <if test="id != null">id = #{id, jdbcType = INTEGER} and</if>
                <if test="blackwhiteId != null">blackwhite_id = #{blackwhiteId, jdbcType = INTEGER} and</if>
                <if test="data != null">data = #{data, jdbcType = VARCHAR} and</if>
                <if test="ifDel != null">if_del = #{ifDel, jdbcType = NUMERIC} and</if>
                <if test="status != null">status = #{status, jdbcType = NUMERIC} and</if>
                <if test="remark != null">remark = #{remark, jdbcType = VARCHAR} and</if>
                <if test="createTime != null">create_time = #{createTime, jdbcType = TIMESTAMP} and</if>
                <if test="modifyTime != null">modify_time = #{modifyTime, jdbcType = TIMESTAMP} and</if>
                <if test="createUser != null">create_user = #{createUser, jdbcType = INTEGER} and</if>
                <if test="modifyUser != null">modify_user = #{modifyUser, jdbcType = INTEGER} and</if>
                <if test="keywords != null and keywords != ''">
                    and (
                    id like concat(concat('%', #{keywords}),'%')
                    or blackwhite_id like concat(concat('%', #{keywords}),'%')
                    or data like concat(concat('%', #{keywords}),'%')
                    or if_del like concat(concat('%', #{keywords}),'%')
                    or status like concat(concat('%', #{keywords}),'%')
                    or remark like concat(concat('%', #{keywords}),'%')
                    or create_time like concat(concat('%', #{keywords}),'%')
                    or modify_time like concat(concat('%', #{keywords}),'%')
                    or create_user like concat(concat('%', #{keywords}),'%')
                    or modify_user like concat(concat('%', #{keywords}),'%')
                    )
                </if>
            </trim>
        </where>
    </sql>

    <select id="findByPageXML" parameterType="java.util.Map" resultMap="dflBlackWhiteItemMap">
        select
        <include refid="field"></include>
        from dfl_black_white_item
        <include refid="findByPage_where"></include>
        <choose>
            <when test="sidx != null">
                order by ${sidx} ${sord}, id desc
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="page != null and rows != null">
            limit ${startRows}, ${rows}
        </if>
    </select>

    <select id="findCountXML" parameterType="java.util.Map" resultType="java.lang.Integer">
        select
        count(1)
        from dfl_black_white_item
        <include refid="findByPage_where"></include>
    </select>

    <select id="findAllXML" parameterType="java.util.Map" resultMap="dflBlackWhiteItemMap">
        select
        <include refid="field"></include>
        from dfl_black_white_item
        <where>
            <trim suffixOverrides="and | or">
                <if test="id != null">id = #{id, jdbcType = INTEGER} and</if>
                <if test="blackwhiteId != null">blackwhite_id = #{blackwhiteId, jdbcType = INTEGER} and</if>
                <if test="data != null">data = #{data, jdbcType = VARCHAR} and</if>
                <if test="ifDel != null">if_del = #{ifDel, jdbcType = NUMERIC} and</if>
                <if test="status != null">status = #{status, jdbcType = NUMERIC} and</if>
                <if test="remark != null">remark = #{remark, jdbcType = VARCHAR} and</if>
                <if test="createTime != null">create_time = #{createTime, jdbcType = TIMESTAMP} and</if>
                <if test="modifyTime != null">modify_time = #{modifyTime, jdbcType = TIMESTAMP} and</if>
                <if test="createUser != null">create_user = #{createUser, jdbcType = INTEGER} and</if>
                <if test="modifyUser != null">modify_user = #{modifyUser, jdbcType = INTEGER} and</if>
            </trim>
        </where>
    </select>

    <select id="findByIdXML" parameterType="java.lang.String" resultMap="dflBlackWhiteItemMap">
        select
        <include refid="field"></include>
        from dfl_black_white_item
        <where>
            id = #{id}
        </where>
    </select>

    <insert id="insertXML" parameterType="org.ccs.opendfl.mysql.dflcore.po.DflBlackWhiteItemPo" useGeneratedKeys="true"
            keyProperty="id" flushCache="true">
        insert dfl_black_white_item
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="blackwhiteId != null">blackwhite_id,</if>
            <if test="data != null">data,</if>
            <if test="ifDel != null">if_del,</if>
            <if test="status != null">status,</if>
            <if test="remark != null">remark,</if>
            <if test="createTime != null">create_time,</if>
            <if test="modifyTime != null">modify_time,</if>
            <if test="createUser != null">create_user,</if>
            <if test="modifyUser != null">modify_user,</if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id, jdbcType = INTEGER},</if>
            <if test="blackwhiteId != null">#{blackwhiteId, jdbcType = INTEGER},</if>
            <if test="data != null">#{data, jdbcType = VARCHAR},</if>
            <if test="ifDel != null">#{ifDel, jdbcType = NUMERIC},</if>
            <if test="status != null">#{status, jdbcType = NUMERIC},</if>
            <if test="remark != null">#{remark, jdbcType = VARCHAR},</if>
            <if test="createTime != null">#{createTime, jdbcType = TIMESTAMP},</if>
            <if test="modifyTime != null">#{modifyTime, jdbcType = TIMESTAMP},</if>
            <if test="createUser != null">#{createUser, jdbcType = INTEGER},</if>
            <if test="modifyUser != null">#{modifyUser, jdbcType = INTEGER},</if>
        </trim>
    </insert>

    <update id="updateXML" parameterType="org.ccs.opendfl.mysql.dflcore.po.DflBlackWhiteItemPo" keyProperty="id">
        update dfl_black_white_item
        <set>
            <trim suffixOverrides=",">
                <if test="id != null">id = #{id},</if>
                <if test="blackwhiteId != null">blackwhite_id = #{blackwhiteId},</if>
                <if test="data != null">data = #{data},</if>
                <if test="ifDel != null">if_del = #{ifDel},</if>
                <if test="status != null">status = #{status},</if>
                <if test="remark != null">remark = #{remark},</if>
                <if test="createTime != null">create_time = #{createTime},</if>
                <if test="modifyTime != null">modify_time = #{modifyTime},</if>
                <if test="createUser != null">create_user = #{createUser},</if>
                <if test="modifyUser != null">modify_user = #{modifyUser},</if>
            </trim>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="deleteXML" parameterType="java.lang.String">
        delete from dfl_black_white_item
        <where>
            id = #{id}
        </where>
    </delete>
</mapper>